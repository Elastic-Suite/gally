applications:
  admin:
    source:
      root: "/front"
    type: "nodejs:18"
    variables:
        env:
            NEXT_PUBLIC_API_ROUTE_PREFIX: 'api'
#            NEXT_PUBLIC_API_URL: 'Set this as an environment variable in Upsun'
    mounts:
      "/.npm":
        source: "storage"
        source_path: "npm"
    web:
      commands:
        start: "yarn start"
    build:
      flavor: none
    dependencies:
      nodejs:
        yarn: "^1.22.0"
    hooks:
      build: |
        yarn
        yarn install --frozen-lockfile --network-timeout 120000
        yarn build
      deploy: |
        set -eux
          
  api:
    source:
      root: "/api"
    type: "php:8.3"
    variables:
        env:
            APP_ENV: 'prod'
            API_ROUTE_PREFIX: 'api'
            ELASTICSEARCH_SSL_VERIFICATION: false

    dependencies:
      php:
        composer/composer: "^2"
    runtime:
      extensions:
        - apcu
        - pdo_pgsql
        - sodium
        - redis
    mounts:
      "/var/cache": "shared:files/cache"
      "/var/log": "shared:files/log"
      "/var/sessions": "shared:files/sessions"
    web:
      locations:
        "/":
          root: "public"
          passthru: "/index.php"
          rules:
              '^/api/bundles/(?<resourceName>.*)$':
                  passthru: '/bundles/$resourceName'
    build:
        flavor: composer
    hooks:
      build: |
          bin/console lexik:jwt:generate-keypair --skip-if-exists --no-interaction
          bin/console --env=prod assets:install --no-debug
          [ -z "${MEDIA_URL}" ] || echo "gally:\n  base_url:\n    media: '${MEDIA_URL}'" > config/packages/gally_configuration.yaml
      
      deploy: |
          OPENSEARCH_URL="http://opensearch.internal:9200"
          # Check the number of nodes in the cluster
          NODE_COUNT=$(curl -s "$OPENSEARCH_URL/_cat/nodes?h=name" | wc -l)
      
          if [ "$NODE_COUNT" -eq 1 ]; then
            echo "This is a single-node OpenSearch cluster. Proceeding with the settings change."
    
            # Change the setting plugins.ml_commons.only_run_on_ml_node to false
            curl -X PUT "$OPENSEARCH_URL/_cluster/settings" \
              -H "Content-Type: application/json" \
              -d '{ "persistent": { "plugins.ml_commons.only_run_on_ml_node": false}}'
            echo "Setting updated successfully."
          else
            echo "This is a multi-node OpenSearch cluster. No changes made."
          fi
          # Change the setting plugins.ml_commons.disk_free_space_threshold to -1 to avoid Disk Circuit Breaker
          curl -X PUT "$OPENSEARCH_URL/_cluster/settings" \
            -H "Content-Type: application/json" \
            -d '{ "persistent": { "plugins.ml_commons.disk_free_space_threshold": -1}}'
          bin/console --env=prod cache:clear
          bin/console doctrine:migrations:migrate -n --allow-no-migration    
    relationships:
      database: "postgresql:postgresql"
      opensearch: "opensearch:opensearch"
      redis: "redis:redis"
          
services:
    
  varnish:
    type: varnish:7.6
    relationships:
      api: 'api:http'
      admin: 'admin:http'
    configuration:
      vcl: !include
        type: string
        path: default.vcl
            
  postgresql:
    type: postgresql:15

  redis:
    type: redis:7.0

  opensearch:
    type: opensearch:2
    configuration:
        plugins:
            - analysis-icu
            - analysis-phonetic
            - opensearch-ml-plugin
            - neural-search
            - opensearch-knn
            - opensearch-job-scheduler
          
routes:
# Route everything to Varnish and he will dispatch.   
    https://{default}/:
        cache:
            enabled: false
        ssi:
            enabled: false
        type: upstream
        upstream: varnish:http
