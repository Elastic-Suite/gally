name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [review_requested, ready_for_review]
  workflow_dispatch: ~

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull images
        run: docker-compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker-compose up --build -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker-compose ps
                docker-compose logs
                exit 1
              ;;
            esac
          done
          exit 1
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check HTTPS reachability
        run: curl  -vk -o /dev/null https://localhost
      - name: Create test database
        run: |
          docker-compose exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:database:create
          docker-compose exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: PHPUnit
        run: docker-compose exec -e XDEBUG_MODE=off -T php bin/phpunit
      - name: Coverage
        run: docker-compose exec -e XDEBUG_MODE=coverage -T php bin/phpunit --coverage-clover=coverage.xml src/Elasticsuite
      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          directory: api
      - name: Generate code coverage report
        uses: danhunsaker/clover-reporter-action@v0.2.17-clover
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          clover-file: ./api/coverage.xml
      - name: Doctrine Schema Validator
        run: docker-compose exec -e XDEBUG_MODE=off -T php bin/console doctrine:schema:validate --skip-sync
      - name: Jest
        run: docker-compose exec -T pwa yarn test --ci --passWithNoTests

  Deploy:
    needs: tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_DEPLOY_KEY }}
            HOSTNAME : ${{ secrets.AWS_HOSTNAME }}
            USER_NAME : ${{ secrets.AWS_USER }}
            APP_SECRET: ${{ secrets.APP_SECRET }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            cd /home/ubuntu/standalone &&
            docker-compose down &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            SERVER_NAME=$HOSTNAME APP_SECRET=$APP_SECRET POSTGRES_PASSWORD=$POSTGRES_PASSWORD docker-compose -f docker-compose.yml -f docker-compose.int.yml up -d --build 
          "
