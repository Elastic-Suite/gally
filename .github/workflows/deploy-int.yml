name: Deploy integration

on:
  workflow_call:
    inputs:
      back_branch:
        description: 'Back branch to deploy'
        required: true
        type: string
      front_branch:
        description: 'Front branch to deploy'
        required: true
        type: string
      composer_version:
        description: "Composer version of Gally's packages"
        required: true
        type: string
    secrets:
      AWS_DEPLOY_KEY:
        required: true
      AWS_HOSTNAME:
        required: true
      AWS_USER:
        required: true
      APP_SECRET:
        required: true
      POSTGRES_PASSWORD:
        required: true
      COMPOSER_AUTH:
        required: true

jobs:
  deploy:
    name: Integration
    runs-on: ubuntu-latest
    
    steps:      
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_DEPLOY_KEY }}
            HOSTNAME : ${{ secrets.AWS_HOSTNAME }}
            USER_NAME : ${{ secrets.AWS_USER }}
            APP_SECRET: ${{ secrets.APP_SECRET }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            cd /home/ubuntu/ &&
            [ -d gally ] || git clone https://github.com/Elastic-Suite/gally.git gally &&
            cd /home/ubuntu/gally &&
            docker system prune -af &&
            ([[ $(docker volume ls -q | awk '!/_/' | tr '\n' ' ' | wc -l) -eq 0 ]] || docker volume rm $(docker volume ls -q | awk '!/_/' | tr '\n' ' ')) &&
            make .env &&
            docker-compose down &&
            git fetch --all && git reset --hard  && git checkout ${{ inputs.back_branch }} &&
            [ -d front/gally-admin ] || git clone https://github.com/Elastic-Suite/gally-admin.git front/gally-admin &&
            cd front/gally-admin && git fetch --all && git reset --hard && git checkout ${{ inputs.front_branch }} &&
            cd /home/ubuntu/gally &&
            docker-compose run --rm php rm -rf vendor/gally/gally-premium &&
            docker-compose run --rm php composer config repositories.gally-premium composer https://packagist.smile.fr/gally &&
            docker-compose run -e COMPOSER_AUTH='$COMPOSER_AUTH' php composer require gally/gally-standard ${{ inputs.composer_version }} &&
            docker-compose run -e COMPOSER_AUTH='$COMPOSER_AUTH' php composer require gally/gally-premium ${{ inputs.composer_version }} &&
            SERVER_NAME=$HOSTNAME APP_SECRET=$APP_SECRET POSTGRES_PASSWORD=$POSTGRES_PASSWORD docker-compose -f docker-compose.yml -f docker-compose.int.yml up -d --build
          "
