server {
    listen 443 ssl;
    server_name $SERVER_NAME;

    ssl_certificate /etc/nginx/certs/live/$SERVER_NAME/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/live/$SERVER_NAME/privkey.pem;

    proxy_buffer_size 64k;
    proxy_buffers 64 16k;
    proxy_busy_buffers_size 64k;

    location / {
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:6081;
    }
}

server {
    listen 80;
    server_name $SERVER_NAME;
    root /var/gally/api/public;

    client_body_buffer_size 4m;
    client_max_body_size 256m;
    fastcgi_buffers 64 16k;
    fastcgi_buffer_size 64k;

    location / {
        proxy_pass http://$PWA_UPSTREAM;
    }

    location ~ ^/(example|ws) {
        proxy_pass http://$PWA_UPSTREAM;
    }

    location /$API_ROUTE_PREFIX {
        rewrite ^/$API_ROUTE_PREFIX/(.*)$ /$1 break;

        # Overwrite X-Forwarded-For with actual client IP
        add_header X-Forwarded-For $remote_addr;

        # to let webapp know it's https traffic.
        add_header X-Forwarded-Proto $scheme;

        try_files $uri /index.php$is_args$args;
    }

    # Route toutes les requÃªtes vers l'application PHP API Platform pour $API_SERVER_NAME
    location ~ ^/index\.php(/|$) {

        # when PHP-FPM is configured to use TCP
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://example.com/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Overwrite X-Forwarded-For with actual client IP
    add_header X-Forwarded-For $remote_addr;

    # to let webapp know it's https traffic.
    add_header X-Forwarded-Proto $scheme;
}
