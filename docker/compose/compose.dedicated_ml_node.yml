# Add this compose file to your docker compose command if you want to have a dedicated opensearch node for ML operations.
services:
  search:
    environment:
      - cluster.name=os-docker-cluster       # Search cluster name
      - node.name=opensearch-node-data       # Name the node that will run in this container
      - discovery.seed_hosts=search          # Nodes to look for when discovering the cluster
      - discovery.type=                      # Reset discovery.type
  search-ml:
    build:
      context: docker/search/
      target: gally_opensearch2
    environment:
      - cluster.name=os-docker-cluster       # Search cluster name
      - node.name=opensearch-node-ml         # Name the node that will run in this container
      - discovery.seed_hosts=search          # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node-data # Nodes eligible to serve as cluster manager
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g # Set min and max JVM heap sizes to at least 50% of system RAM
      - bootstrap.memory_lock=true           # Disable JVM heap memory swapping
      - node.roles=ml                        # Define this node as an ml node
      - cluster.routing.allocation.disk.threshold_enabled=false # Avoid ES going read-only because low disk space availability
      - plugins.ml_commons.allow_registering_model_via_url=true
      - plugins.ml_commons.native_memory_threshold=100 # Prevent memory issue after multiple deploy (https://github.com/opensearch-project/ml-commons/issues/2308)
      - plugins.ml_commons.jvm_heap_memory_threshold=100 # Prevent memory issue after multiple deploy (https://github.com/opensearch-project/ml-commons/issues/2308)
      - plugins.security.audit.type=debug    # https://github.com/opensearch-project/security/issues/3130
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_ADMIN_PASSWORD:-!ChangeMe0!}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - os2_ml_data:/usr/share/opensearch/data:rw
    healthcheck:
      test: test $$(curl -uadmin:$${OPENSEARCH_INITIAL_ADMIN_PASSWORD:-!ChangeMe0!} -k --write-out %{http_code} --fail --silent --output /dev/null https://localhost:9200/_cluster/health?wait_for_status=green&timeout=5s) -eq 200
      interval: 10s
      timeout: 5s
      retries: 20
      
volumes:
  os2_ml_data:
