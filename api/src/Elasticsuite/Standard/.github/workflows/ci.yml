name: CI

on:
    push:
        branches:
            - master
    pull_request_target:
        branches:
            - master
        types: [review_requested, ready_for_review, synchronize]
    workflow_dispatch: ~

jobs:
    tests:
        if: github.event.pull_request.draft == false
        name: Tests
        runs-on: ubuntu-latest
        
        env:
            # PHP package name is equal to the repository name.
            package-name: ${{ github.event.repository.name }}
            gally-directory: ${{ github.workspace }}/gally
        
        steps:
            - name: Checkout PHP package
              uses: actions/checkout@v3
              with:
                  path: ${{ env.package-name }}
                  ref: ${{ github.event.pull_request.head.sha }}
            
            - name: Checkout full repository to be used as a composer repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  path: gally-repository

            - name: Checkout Gally template
              uses: actions/checkout@v3
              with:
                  # Checkout gally "template" from the same branch. This is the dev environment with docker files.
                  repository: 'Elastic-Suite/standalone'
                  #ref: ${{ github.base_ref }}
                  ref: feat_empty_src
                  token: ${{ secrets.GH_TOKEN }} # needed only until the gally "template" becomes public.
                  path: gally-dev-${{ github.run_id }}-${{ github.run_number }}
                
                # in $GITHUB_WORKSPACE we will have this after this step : 
                # - gally-<package-name> : contains only the sources from current branch or PR.
                # - gally : a full development environment which is needed for PHPstan            
            - name: Move Gally dev environment to a defined location
              shell: bash
              run: |
                  pwd
                  ls -ail
                  mv gally-dev-${{ github.run_id }}-${{ github.run_number }} ${{ env.gally-directory }}
                  cd ${{ github.workspace }}
                  ls -ail

            - name: Prepare local Repository
              working-directory: ${{ env.magento-directory }}
              run: |
                  composer config --global --no-interaction --ansi repositories.${{ env.package-name }} git "$GITHUB_WORKSPACE/gally-repository"
                  composer config --global repositories
            
            - name: Make .env
              working-directory: ${{ env.gally-directory }}
              run: |
                  make .env
                  cat .env   

            - name: Pull images
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml pull --ignore-pull-failures || true

            - name: Start services
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --build -d

            - name: Wait for services
              working-directory: ${{ env.gally-directory }}
              run: |
                  while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose -f docker-compose.yml -f docker-compose.ci.yml ps -q php)")"; do
                    case $status in
                      starting) sleep 1;;
                      healthy) exit 0;;
                      unhealthy)
                        docker-compose -f docker-compose.yml -f docker-compose.ci.yml ps
                        docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
                        exit 1
                      ;;
                    esac
                  done
                  exit 1
                
            # Adding the current build of Gally inside php app.     
            # $GITHUB_WORKSPACE/${{ env.package-name }} is where it has been checkouted at the beginning.
            - name: Add current build of Gally
              working-directory: ${{ env.gally-directory }}
              run: |
                  make exec s=php c="pwd"
                  make exec s=php c="ls -ail"
                  make exec s=php c="ls -ail vendor/gally/${{ env.package-name }}"
                  make composer c="config discard-changes true"
                  make composer c="require --dev "gally/${{ env.package-name }}:${GITHUB_BASE_REF:-${GITHUB_REF##*/}}-dev" --ignore-platform-reqs"
                  make composer c="config discard-changes false"
                  ls -ail $GITHUB_WORKSPACE
                  docker compose cp $GITHUB_WORKSPACE/${{ env.package-name }} php:/srv/api/vendor/gally/
                  make exec s=php c="ls -ail vendor/gally/${{ env.package-name }}"

            - name: Check HTTP reachability
              id: http_reachability
              run: curl -v -o /dev/null http://localhost

            - name: HTTP Failure
              if: ${{ failure() && steps.tests.http_reachability == 'failure' }}
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs

            - name: Check HTTPS reachability
              id: https_reachability
              run: curl  -vk -o /dev/null https://localhost

            - name: HTTPS Failure
              if: ${{ failure() && steps.tests.https_reachability == 'failure' }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs

            - name: Create test database
              working-directory: ${{ env.gally-directory }}
              run: |
                  docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:database:create
                  docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:migrations:migrate --no-interaction

            - name: Doctrine Schema Validator
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console doctrine:schema:validate --skip-sync

            - name: Fixtures load
              working-directory: ${{ env.gally-directory }}
              run: |
                  docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console elasticsuite:index:clear --no-interaction
                  docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console hautelook:fixtures:load --no-interaction -vv
                  docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console doctrine:fixtures:load --append --no-interaction

            - name: Coverage
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=coverage -T php bin/phpunit --coverage-clover=coverage/coverage.xml vendor/gally/${{ env.package-name }}

            - name: Cleanup coverage file
              working-directory: ${{ env.gally-directory }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T php sed -i 's:<file name="/srv/:<file name="/:' coverage/coverage.xml

            - if: ${{ github.event_name == 'pull_request' }}
              name: Download artifact
              uses: dawidd6/action-download-artifact@v2.14.1
              continue-on-error: true
              id: base_coverage_report
              with:
                  workflow: .github/workflows/ci.yml
                  branch: ${{ github.base_ref }}
                  name: coverage-report
                  path: coverage/base # Retrieve previous coverage file at the root directory, not inside api/coverage

            - name: Backend Coverage Report as Comment (Compared to a base)
              if: ${{ github.event_name == 'pull_request' && steps.base_coverage_report.outcome == 'success' }}
              uses: lucassabreu/comment-coverage-clover@main
              continue-on-error: true
              with:
                  with-chart: false
                  file: api/coverage/coverage.xml
                  base-file: coverage/base/coverage.xml
                  max-line-coverage-decrease: 10.0
                  max-method-coverage-decrease: 10.0
                  min-line-coverage: 75
                  min-method-coverage: 75
                  signature: "Backend Coverage compared to target branch"

            - name: Backend Coverage Report as Comment (Clean)
              uses: lucassabreu/comment-coverage-clover@v0.3.0
              if: ${{ (github.event_name == 'pull_request' && steps.base_coverage_report.outcome != 'success') || github.event_name == 'push'}}
              with:
                  with-chart: false
                  file: api/coverage/coverage.xml
                  signature: "Backend Coverage of this branch"

            - uses: actions/upload-artifact@v2
              with:
                  name: coverage-report
                  path: api/coverage/coverage.xml

            - name: "[End] Job failed, gathering logs"
              working-directory: ${{ env.gally-directory }}
              if: ${{ failure() }}
              run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
