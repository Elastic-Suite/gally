name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [review_requested, ready_for_review, synchronize]
  workflow_dispatch: ~

jobs:
  tests:
    if: github.event.pull_request.draft == false
    name: Tests
    runs-on: ubuntu-latest
    
    env:
        gally-directory: /var/www/gally
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
        with:
            # Checkout gally "template" from the same branch. This is the dev environment with docker files.
            repository: 'Elastic-Suite/standalone'
            ref: ${{ github.base_ref }}
            token: ${{ secrets.READ_ONLY_TOKEN }} # needed only until the gally "template" becomes public.
            path: gally-dev-${{ github.run_id }}-${{ github.run_number }}

      - name: Move Gally dev environment to a defined location
        shell: bash
        run: |
            mv gally-dev-${{ github.run_id }}-${{ github.run_number }} ${{ env.gally-directory }}
            cd ${{ env.gally-directory }}
            ls -ail

      - name: Pull images
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml pull --ignore-pull-failures || true
      - name: Start services
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --build -d
      - name: Wait for services
        working-directory: ${{ env.gally-directory }}
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose -f docker-compose.yml -f docker-compose.ci.yml ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker-compose -f docker-compose.yml -f docker-compose.ci.yml ps
                docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
                exit 1
              ;;
            esac
          done
          exit 1
      # To remove : api/src/ actually contains also the Elasticsuite sources.            
      - name: "[Init] Add current build of Gally"
        working-directory: ${{ env.gally-directory }}
        run: |
            rm -rf api/src/Elasticsuite/Standard/**
            rm -rf api/src/Elasticsuite/Premium/**
      # Untested : adding the current build of Gally inside php app.      
      - name: "[Init] Add current build of Gally"
        working-directory: ${{ env.gally-directory }}
        run: |
          cd api  
          composer config discard-changes true
          composer require --dev "gally/gally-standard:${GITHUB_BASE_REF:-${GITHUB_REF##*/}}-dev" --ignore-platform-reqs
          composer config discard-changes false
          rm -rf api/vendor/gally/gally-standard/**  
          cp -R $GITHUB_WORKSPACE/* api/vendor/gally/gally-standard/
            
      - name: Check HTTP reachability
        id: http_reachability
        run: curl -v -o /dev/null http://localhost
      - name: HTTP Failure
        if: ${{ failure() && steps.tests.http_reachability == 'failure' }}
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
      - name: Check HTTPS reachability
        id: https_reachability
        run: curl  -vk -o /dev/null https://localhost
      - name: HTTPS Failure
        if: ${{ failure() && steps.tests.https_reachability == 'failure' }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
      - name: Create test database
        working-directory: ${{ env.gally-directory }}
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:database:create
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: Doctrine Schema Validator
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console doctrine:schema:validate --skip-sync
      - name: Fixtures load
        working-directory: ${{ env.gally-directory }}
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console elasticsuite:index:clear --no-interaction
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console hautelook:fixtures:load --no-interaction -vv
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=off -T php bin/console doctrine:fixtures:load --append --no-interaction
      - name: Coverage
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -e XDEBUG_MODE=coverage -T php bin/phpunit --coverage-clover=coverage/coverage.xml src/Elasticsuite
      
      - name: Cleanup coverage file
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T php sed -i 's:<file name="/srv/:<file name="/:' coverage/coverage.xml
        
      - if: ${{ github.event_name == 'pull_request' }}
        name: Download artifact
        uses: dawidd6/action-download-artifact@v2.14.1
        continue-on-error: true
        id: base_coverage_report
        with:
          workflow: .github/workflows/ci.yml
          branch: ${{ github.base_ref }}
          name: coverage-report
          path: coverage/base # Retrieve previous coverage file at the root directory, not inside api/coverage

      - name: Backend Coverage Report as Comment (Compared to a base)
        if: ${{ github.event_name == 'pull_request' && steps.base_coverage_report.outcome == 'success' }}
        uses: lucassabreu/comment-coverage-clover@main
        continue-on-error: true
        with:
          with-chart: false
          file: api/coverage/coverage.xml
          base-file: coverage/base/coverage.xml
          max-line-coverage-decrease: 10.0
          max-method-coverage-decrease: 10.0
          min-line-coverage: 75
          min-method-coverage: 75
          signature: "Backend Coverage compared to target branch"

      - name: Backend Coverage Report as Comment (Clean)
        uses: lucassabreu/comment-coverage-clover@v0.3.0
        if: ${{ (github.event_name == 'pull_request' && steps.base_coverage_report.outcome != 'success') || github.event_name == 'push'}}
        with:
          with-chart: false
          file: api/coverage/coverage.xml
          signature: "Backend Coverage of this branch"

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: api/coverage/coverage.xml
                  
      - name: Jest
        working-directory: ${{ env.gally-directory }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml exec -T pwa yarn test:ci

      - name: "[End] Job failed, gathering logs"
        working-directory: ${{ env.gally-directory }}
        if: ${{ failure() }}
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml logs
