services:
    Elasticsuite\Category\Repository\CategoryRepository:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: doctrine.repository_service }

    Elasticsuite\Category\Repository\CategoryConfigurationRepository:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: doctrine.repository_service }

    # Declare DataFixtures
    Elasticsuite\Category\DataFixtures\ElasticsearchCategoryFixtures:
        arguments:
            - '@Elasticsuite\Fixture\Service\ElasticsearchFixtures'
            - '@Elasticsuite\Fixture\Service\EntityIndicesFixturesInterface'
        tags:
            - { name: doctrine.fixture.orm }

    Elasticsuite\Category\Service\CategorySynchronizer:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryRepository'
            - '@Elasticsuite\Category\Repository\CategoryConfigurationRepository'
            - '@Elasticsuite\Search\Elasticsearch\RequestFactoryInterface'
            - '@Elasticsuite\Search\Elasticsearch\Builder\Request\Query\QueryBuilder'
            - '@Elasticsuite\Search\Elasticsearch\Adapter'
            - '@Elasticsuite\Search\Elasticsearch\Request\Container\Configuration\ContainerConfigurationProvider'
            - '@Elasticsuite\Metadata\Repository\MetadataRepository'
            - '@doctrine.orm.entity_manager'

            
    Elasticsuite\Category\Decoration\SyncCategoryDataAfterBulk:
        decorates: Elasticsuite\Index\MutationResolver\BulkIndexMutation
        arguments:
            - '@.inner'
            - '@Elasticsuite\Category\Service\CategorySynchronizer'
            - '@Elasticsuite\Index\Service\IndexSettings'
            - '@Elasticsuite\Index\Repository\Index\IndexRepository'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
        decoration_priority: 100
            
    Elasticsuite\Category\Decoration\SyncCategoryDataAfterBulkDelete:
        decorates: Elasticsuite\Index\MutationResolver\BulkDeleteIndexMutation
        arguments:
            - '@.inner'
            - '@Elasticsuite\Category\Service\CategorySynchronizer'
            - '@Elasticsuite\Index\Service\IndexSettings'
            - '@Elasticsuite\Index\Repository\Index\IndexRepository'
            - '@Elasticsuite\Category\Repository\CategoryProductMerchandisingRepository'
        decoration_priority: 100
            
    Elasticsuite\Category\Decoration\SyncCategoryDataAfterInstall:
        decorates: Elasticsuite\Index\MutationResolver\InstallIndexMutation
        arguments:
            - '@.inner'
            - '@Elasticsuite\Category\Service\CategorySynchronizer'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
        decoration_priority: 100

    Elasticsuite\Category\Service\CategoryProductsSortingOptionsProvider:
        arguments:
            - '@Elasticsuite\Metadata\Repository\SourceFieldRepository'
            - !tagged_iterator { tag: 'elasticsuite.product_api.sort_order_provider', index_by: 'provider_name' }

    Elasticsuite\Category\DataProvider\CategorySortingOptionDataProvider:
        arguments:
            - '@Elasticsuite\Category\Service\CategoryProductsSortingOptionsProvider'
        tags:
            - { name: api_platform.collection_data_provider }

    Elasticsuite\Category\Validator\DefaultSortingFieldConstraintValidator:
        arguments:
            - '@Elasticsuite\Category\DataProvider\CategorySortingOptionDataProvider'
        tags:
            - { name: validator.constraint_validator } 

    Elasticsuite\Category\Controller\CategoryConfigurationGet:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryConfigurationRepository'
            - '@Elasticsuite\Catalog\Repository\CatalogRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Repository\CategoryRepository'
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: controller.service_arguments }
    
    Elasticsuite\Category\Resolver\ConfigurationResolver:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryConfigurationRepository'
            - '@Elasticsuite\Catalog\Repository\CatalogRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Repository\CategoryRepository'
        tags:
            - { name: api_platform.graphql.query_resolver }
    
    Elasticsuite\Category\Service\CategoryTreeBuilder:
        arguments:
            - '@Elasticsuite\Catalog\Repository\CatalogRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Repository\CategoryRepository'
            - '@Elasticsuite\Category\Repository\CategoryConfigurationRepository'
            - '@Elasticsuite\Catalog\Service\DefaultCatalogProvider'
    
    Elasticsuite\Category\Resolver\CategoryTreeResolver:
        arguments:
            - '@Elasticsuite\Category\Service\CategoryTreeBuilder'
        tags:
            - { name: api_platform.graphql.query_resolver }
    
    Elasticsuite\Category\Controller\GetCategoryTree:
        arguments:
            - '@Elasticsuite\Category\Service\CategoryTreeBuilder'
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: controller.service_arguments }
    
    Elasticsuite\Category\Repository\CategoryProductMerchandisingRepository:
        arguments:
            - '@Doctrine\Persistence\ManagerRegistry'
        tags:
            - { name: doctrine.repository_service }

    Elasticsuite\Category\EventSubscriber\ReindexPosition:
        arguments:
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
        tags:
            - { name: doctrine.event_subscriber }

    Elasticsuite\Category\Controller\CategoryProductPositionSave:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryRepository'
            - '@Elasticsuite\Catalog\Repository\CatalogRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: controller.service_arguments }
 
    Elasticsuite\Category\Controller\CategoryProductPositionGet:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: controller.service_arguments }

    Elasticsuite\Category\Resolver\PositionSaveResolver:
        arguments:
            - '@Elasticsuite\Catalog\Repository\CatalogRepository'
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
            - '@Elasticsuite\Category\Repository\CategoryRepository'
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    
    Elasticsuite\Category\Resolver\PositionGetResolver:
        arguments:
            - '@Elasticsuite\Catalog\Repository\LocalizedCatalogRepository'
            - '@Elasticsuite\Category\Service\CategoryProductPositionManager'
            - '@Elasticsuite\Category\Repository\CategoryRepository'
        tags:
            - { name: api_platform.graphql.query_resolver }

    Elasticsuite\Category\Repository\CategoryProductPositionIndexer\CategoryProductPositionIndexerRepositoryInterface: '@Elasticsuite\Category\Repository\CategoryProductPositionIndexer\CategoryProductPositionIndexerRepository'
    Elasticsuite\Category\Repository\CategoryProductPositionIndexer\CategoryProductPositionIndexerRepository:
        arguments:
            - '@api_platform.elasticsearch.client'
            - '@Elasticsuite\Metadata\Repository\MetadataRepository'
            - '@Elasticsuite\Index\Service\IndexSettings'
            - '@Elasticsuite\Index\Repository\Index\IndexRepositoryInterface'
            - '@logger'

    Elasticsuite\Category\Service\CategoryProductPositionManager:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryProductMerchandisingRepository'
            - '@Elasticsuite\Category\Repository\CategoryProductPositionIndexer\CategoryProductPositionIndexerRepositoryInterface'
            - '@Elasticsuite\Metadata\Repository\MetadataRepository'
            - '@doctrine.orm.entity_manager'
            - '@Elasticsuite\Search\Elasticsearch\Builder\Request\SimpleRequestBuilder'
            - '@Elasticsuite\Search\Elasticsearch\Adapter'
            - '@Elasticsuite\Search\Elasticsearch\Request\QueryFactory'
            - '@Elasticsuite\Search\Elasticsearch\Request\Container\Configuration\ContainerConfigurationProvider'

    Elasticsuite\Category\OpenApi\CategoryDecorator:
        decorates: api_platform.openapi.factory
        arguments:
            - '@Elasticsuite\OpenApi\Helper\Documentation'
            - '@.inner'
    
    Elasticsuite\Category\Service\CurrentCategoryProvider:
        arguments:
            - '@Elasticsuite\Category\Repository\CategoryRepository'
