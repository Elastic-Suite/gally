elasticsuite:
    analysis:
        default:
            char_filters:
                html_strip:
                    type: html_strip
            filters:
                trim:
                    type: trim
                # Absolute max supported by Lucene for a token length is 32766 bytes, 
                # so using 1/4 of that to accommodate multibyte UTF-8 characters
                truncate_to_max:
                    type: truncate
                    params:
                        length: 8192
                lowercase:
                    type: lowercase
                word_delimiter:
                    type: word_delimiter
                    params:
                        generate_word_parts: true
                        catenate_words: true
                        catenate_numbers: true
                        catenate_all: true
                        split_on_case_change: true
                        split_on_numerics: true
                        preserve_original: true
                shingle:
                    type: shingle
                    params:
                        min_shingle_size: 2
                        max_shingle_size: 2
                        output_unigrams: true
                reference_shingle:
                    type: shingle
                    params:
                        min_shingle_size: 2
                        max_shingle_size: 10
                        output_unigrams: true
                        token_separator: 
                reference_word_delimiter:
                    type: word_delimiter
                    params:
                        generate_word_parts: true
                        catenate_words: false
                        catenate_numbers: false
                        catenate_all: false
                        split_on_case_change: true
                        split_on_numerics: true
                        preserve_original: false
                ascii_folding:
                    type: asciifolding
                    params:
                        preserve_original: false
                phonetic:
                    type: phonetic
                    params:
                        encoder: metaphone
            analyzers:
                keyword:
                    char_filters: ~
                    tokenizer: keyword
                    filters: 
                        - truncate_to_max
                standard:
                    char_filters:
                        - html_strip
                    tokenizer: standard
                    filters:
                        - ascii_folding
                        - trim
                        - word_delimiter
                        - lowercase
                        - elision
                        - standard_override
                        - stemmer
                whitespace:
                    char_filters:
                        - html_strip
                    tokenizer: standard
                    filters:
                        - ascii_folding
                        - trim
                        - word_delimiter
                        - lowercase
                        - elision
                reference:
                    char_filters:
                        - html_strip
                    tokenizer: standard
                    filters:
                        - ascii_folding
                        - trim
                        - reference_word_delimiter
                        - lowercase
                        - elision
                        - reference_shingle
                shingle:
                    char_filters:
                        - html_strip
                    tokenizer: whitespace
                    filters:
                        - ascii_folding
                        - trim
                        - word_delimiter
                        - lowercase
                        - elision
                        - shingle
                sortable:
                    char_filters:
                        - html_strip
                    tokenizer: keyword
                    filters:
                        - ascii_folding
                        - trim
                        - lowercase
                phonetic:
                    char_filters:
                        - html_strip
                    tokenizer: standard
                    filters:
                        - ascii_folding
                        - trim
                        - word_delimiter
                        - lowercase
                        - elision
                        - phonetic

        ar:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: arabic}
        eu:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: basque}
        bg:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: bulgarian}
        ca:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: catalan}
                elision:
                    type: elision
                    params:
                        articles: [d, l, m, n, s, t]
        cs:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: czech}
        da:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: danish}
        de:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: german2}
        en:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: english}
        es:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: spanish}
        el:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: greek}
        fi:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: finnish}
        fr:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: french}
                # No known issues with the french or light_french stemmers. 
                # But this is to show that having an empty list of rules is valid.
                # This means existing rules can be both re-defined or voided in a custom module.   
                #   params: {rules: []}
                # Known issues with the "french" stemmer.
                standard_override:
                    type: stemmer_override
                    params: 
                        rules:
                            - clous => clou
                            - verrous => verrou
                            - ecrous => ecrou
                elision:
                    type: elision
                    params:
                        articles: [l, m, t, qu, n, s, j, d, c]
                phonetic:
                    type: phonetic
                    params:
                        encoder: beider_morse
                        languageset: french
        gl:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: galician}
        hi:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: hindi}
        hu:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: hungarian}
        id:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: indonesian}
        it:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: italian}
                # Known issues with the italian stemmer. 
                # Please note that we do not claim 100% accuracy in the selected stems.
                # For instance, the stem for trapani is originally trapan, the same as the verb trapanare.
                # So the actual valid rule might be trapano => trapan ...     
                standard_override:
                    type: stemmer_override
                    params: 
                        rules:
                            - trapani => trap
                            - zanzariere => zanzarier
                            - lavatoi => lavatoi
                            - lamiere => lamier
                            - plafoniere => plafonier
                elision:
                    type: elision
                    params:
                        articles: [c, l, all, dall, dell,nell, sull, coll, pell,gl, agl, dagl, degl, negl,sugl, un, m, t, s, v, d]
        lv:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: latvian}
        lt:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: lithuanian}
        nb:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: norwegian}
        nn:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: light_nynorsk}
        nl:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: dutch}
        pt:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: portuguese}
        ro:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: romanian}
        ru:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: russian}
        sv:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: swedish}
        tr:
            filters:
                stemmer:
                    type: stemmer
                    params: {language: turkish}
